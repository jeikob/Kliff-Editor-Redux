{
  "_from": "monaco-vim",
  "_id": "monaco-vim@0.0.7",
  "_inBundle": false,
  "_integrity": "sha512-5/RwRiDB8n+Bunod0JdiVLzCyxja/HG4caknnyTzy7NemK0ElpvCKTlMe/nWpaQFSAaY4wos3+2tzyrrLlnasw==",
  "_location": "/monaco-vim",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "monaco-vim",
    "fetchSpec": "latest",
    "name": "monaco-vim",
    "raw": "monaco-vim",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/monaco-vim/-/monaco-vim-0.0.7.tgz",
  "_shasum": "7aea8c0e123f8de95830f736ce9cf5d075b6a636",
  "_shrinkwrap": null,
  "_spec": "monaco-vim",
  "_where": "/Users/burritjr/Desktop/Kliff-Redux",
  "author": {
    "email": "brijesh@bitwiser.in",
    "name": "Brijesh Bittu",
    "url": "http://bitwiser.in/"
  },
  "bundleDependencies": false,
  "dependencies": {
    "monaco-editor": "^0.14.0"
  },
  "deprecated": false,
  "description": "Vim keybindings for monaco-editor",
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-loader": "^7.1.5",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.7.0",
    "css-loader": "^1.0.0",
    "html-webpack-plugin": "^3.2.0",
    "monaco-editor-webpack-plugin": "^1.5.1",
    "style-loader": "^0.22.1",
    "webpack": "^4.16.5",
    "webpack-cli": "^3.1.0",
    "webpack-dev-server": "^3.1.5"
  },
  "keywords": [
    "monaco-editor",
    "vim"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "monaco-vim",
  "optionalDependencies": {},
  "readme": "## monaco-vim\n\nVim keybindings for monaco-editor [demo](https://editor-a5ea1.firebaseapp.com)\n\n[![npm version](https://badge.fury.io/js/monaco-vim.svg)](https://www.npmjs.com/package/monaco-vim)\n\n### Install\n\n#### Webpack/browserify\n```sh\nnpm install monaco-vim\n```\n\n#### As global\n\nAdd this script [https://unpkg.com/monaco-vim/dist/monaco-vim.js](https://unpkg.com/monaco-vim/dist/monaco-vim.js) after monaco-editor's `script` tag.\nMake sure that `monaco` is already available on the `window` global. Vim will be available as `MonacoVim` global.\n\n### Usage\n\n```js\nimport { initVimMode } from 'monaco-vim';\n\nconst vimMode = initVimMode(editor, document.getElementById('my-statusbar'))\n```\n\nOR\n\n```js\nvar initVimMode = window.MonacoVim.initVimMode;\nvar vimMode = initVimMode(editor, document.getElementById('my-statusbar'));\n```\n\nHere, `editor` is initialized instance of monaco editor and the 2nd argument should be the node where you would like to place/show the VIM status info.\n\nTo remove the attached VIM bindings, call\n\n```js\nvimMode.dispose();\n```\n\nSee [demo.js](https://github.com/brijeshb42/monaco-vim/tree/master/src/demo.js) for full usage.\n\nIf you would like to customize the statusbar or provide your own implementation, see `initVimMode`'s implementation in [src/index.js](https://github.com/brijeshb42/monaco-vim/tree/master/src/index.js).\n\nThis implementaion of VIM is a layer between Codemirror's VIM keybindings and monaco. There may be issues in some of the keybindings, especially those that expect extra input like the Ex commands or search/replace. If you encounter such bugs, create a new [issue](https://github.com/brijeshb42/monaco-vim/issues). PRs to resolve those are welcome too.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "babel": "NODE_ENV=production babel ./src -d lib --ignore 'demo.js'",
    "build": "npm run clean && npm run babel && npm run dist",
    "clean": "rm -rf lib dist local",
    "dist": "webpack --mode production",
    "local": "mkdir -p local && cp -r lib dist package.json local",
    "prepublishOnly": "npm run build",
    "start": "webpack-dev-server --mode development --host=0.0.0.0 --port=8080",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.7"
}
